#!/bin/bash
# WARNING: this script will destroy data on the selected disk.
# This script can be run by executing the following:
#   curl -sL https://git.io/JeeOJ | bash
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

### Get infomation from user ###
hostname=$(dialog --stdout --inputbox "Enter hostname" 0 0) || exit 1
clear
: ${hostname:?"hostname cannot be empty"}

user=$(dialog --stdout --inputbox "Enter admin username" 0 0) || exit 1
clear
: ${user:?"user cannot be empty"}

password=$(dialog --stdout --passwordbox "Enter admin password" 0 0) || exit 1
clear
: ${password:?"password cannot be empty"}
password2=$(dialog --stdout --passwordbox "Enter admin password again" 0 0) || exit 1
clear
[[ "$password" == "$password2" ]] || ( echo "Passwords did not match"; exit 1; )

devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac)
device=$(dialog --stdout --menu "Select installation disk" 0 0 0 ${devicelist}) || exit 1
clear

### Set up logging ###
exec 1> >(tee "stdout.log")
exec 2> >(tee "stderr.log")

timedatectl set-ntp true

parted --script "${device}" -- mklabel gpt \
  mkpart primary fat32 1MiB 512MiB \
  set 1 esp on \
  mkpart primary ext4 512MiB 100%

# Simple globbing was not enough as on one device I needed to match /dev/mmcblk0p1
# but not /dev/mmcblk0boot1 while being able to match /dev/sda1 on other devices.
part_boot="$(ls ${device}* | grep -E "^${device}p?1$")"
part_root="$(ls ${device}* | grep -E "^${device}p?2$")"

wipefs "${part_boot}"
wipefs "${part_root}"

mkfs.fat -F32 "${part_boot}"
mkfs.ext4 "${part_root}"

mount "${part_root}" /mnt
mkdir /mnt/boot
mount "${part_boot}" /mnt/boot

### Install and configure the basic system ###


pacstrap /mnt base base-devel
genfstab -U /mnt >> /mnt/etc/fstab


arch-chroot /mnt

ln -sf /usr/share/zoneinfo/Europe/Athens /etc/localtime
hwclock --systohc
locale-gen
echo "LANG=en_GB.UTF-8" > /mnt/etc/locale.conf
echo "${hostname}" > /mnt/etc/hostname
pacman -S --noconfirm grub efibootmgr
grub-install --target=x86_64-efi --efi-directory /boot --boot-directory /boot --removable
grub-mkconfig -o /boot/grub/grub.cfg
systemctl enable dhcpcd

pacman -S --noconfirm xf86-video-ati xf86-video-intel xf86-video-nouveau xf86-video-vesa
pacman -S --noconfirm xf86-input-libinput
pacman -S --noconfirm acpi

useradd -mU -s /usr/bin/zsh -G wheel,uucp,video,audio,storage,games,input "$user"
chsh -s /usr/bin/zsh

echo "$user:$password" | chpasswd --root /mnt
echo "root:$password" | chpasswd --root /mnt
